-COMMAND TO CONNECT GITHUB ACCOUNT WITH VS-CODE
	git config --global user.name "<username>"

	git config --global user.email "<mail_id>"


-GETTING REPOSITORIS FROM GITHUB TO VS-CODE
	git clone <code_link_in_github>


-MOVING FROM OUTER FOLDER TO INNER FOLDER
	cd <folder_name>


-IF I CREATE A FILE IN MY LOCAL PC THAT FILE BECOMES AUTOMATICALLY UNTRACKED FILES
-TO SEE THE UNTRACKED FILES
	git status


-HOW TO PUSH THE FILE FROM OUR WORKING FOLDER TO GITHUB
-DO THE SAME FOLLOWING PROCESS ,IF YOU DELETED ANY FILE IN YOUR WOKING FOLDER ,YOU WANT TO UPDATE THAT IN GITHUB
-1.ADD THE FILE INTO STAGING AREA
	git add <filename>
-2.ADD INTO GIT FOLDER
	git commit -m "<commit_message"
//CHECK BEFORE PUSH , WHERE YOU ARE
	git branch
-3.PUSH FROM GIT FOLDER(PC) TO GITHUB
	git push origin main
//ORIGIN MEANS -THE LINK YOU COPIED AND WORKED IN VS-CODE(REPOSITORY)

//CREATE NEW FILE IN LOCAL OR MODIFY THE GITHUB FILE IN LOCAL OR EVEN FULLY DELETED THE FILE 

//ANY_MODIFICATIONS->ADD->COMMIT->PUSH


-ALREADY I CLONED ONE REPOSITORY THEN I MODIFY SOMETHING IN THE GITHUB I WANT THE NEW MODIFICATIONS TO MY LOCAL PC
	git pull


-MOVING FROM ONE FOLDER TO ANOTHER
//CHANGE DIRECTORY (cd)
-1.FOR FORWARD MOVEMENT
	cd <folder_name>
-2.FOR BACKWARD MOVEMENT
	cd..

//IF YOU ADD A NEW FOLDER IN WORKING SPACE AND DO SOME PROJECT(ADDING / MODIFYING FILES) FIRST MAKE THE FOLDER .git
-HOW TO MAKE THE FOLDER AS A .git FOLDER
-FIRST MOVING INTO THE FOLDER
	git init


-MOVING MULTIPLE FILES INTO STAGING AREA 
	git add .
-THEN COMMIT THE ADDED ALL FILES IN A SINGLE COMMIT MESSAGE
	git commit -m "<commit_message>"
//IF TRY TO PUSH GIT ORIGIN MAIN, YOU CANN'T BECAUSE, YOU DON'T HAVE AN REPSODITORY IN YOU GITHUB
//SO, GOTO THE GITHUB AND CREATE ONE REPOSITORY AND CONNECT WITH YOUR LOCAL PC
-HOW TO CONNECT NEW REPOSITORY INTO THE GITHUB
	git remote add origin <setup_link_from_github>
-BEFORE PUSHING ,CHECK THE BRANCH
	git branch
-HOW TO CHANGE THE GIT BRANCH NAME
	git branch -M <new_name>
-TO PUSH INTO GITHUB
	git push origin <branch_name>

//		ABOUT BRANCH
-TO CHECK HOW MANY BRANCHES ARE THER IN MY REPOSITORY
	git branch -a

//NEW BRANCH WAS CREATED IN GITHUB ONLY 
//IF YOU CREATED A NEW BRANCH ,IT COPIES THE EXACT CONTENT FROM THE MAIN BRANCH
//IF ANYTHING WAS MODIFIED IN THE ONE BRANCH IT WON'T AFFECT/VISIBLE IN THE OTHER BRANCHES

-HOW TO MOVE FROM OE BRANCH TO ANOTHER BRANCH IN VS CODE
	git checkout <branch_name>

-TO CHECK THE DIFFERENCE BETWEEN THE ONE(MAIN) BRANCH AND OTHER BRANCH
//FROM THE (ONE)MAIN BRANCH
	git diff <branch_name>

//WHY WE USE BRANCHES
//IN COMPANY ORIGINAL CODE WAS IN THE MAIN BRANCH ONLY, YOU GET EXACT COPY OF THAT TO MODIFY / WORKING ON THAT
//IN ORDER TO GETTING ERROR IN THE ORIGINAL MAIN BRANCH

-HOW TO MERGE THE TWO BRANCHES
//FROM THE MAIN(ONE) 
	git merge <branch_name>
	//IN LOCAL DISK IT MERGED ,TO MERGE IN THE GITHUB
	git push origin main(<branch_name>)


-HOW TO CREATE NEW BRANCH
	git branch <new_branch_name>
//IF YOU DID YOUR PROJECTS IN YOUR NEW BRANCH 
//AFTER IF YOU WISH TO PUSH THAT IN YOU GITHUB ,BUT YOU DON'T HAVE ANY BRANCH ON YOUR GIT HUB
//DON'T WORRY, JUST USE YOUR NEW BRANCH
	git push origin <branch_name>
//IT AUTOMATICALLY CREATED A NEW BRANCH IN GITHUB

// 		PULL REQUEST
	IT WAS ACCEPTED BY THE GITHUB OWNER